services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    container_name: prod-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2113
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2113:2113"
    networks:
      prod_order_ps_network:
        ipv4_address: 173.21.1.1

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    container_name: prod-kafka
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9201:9201"
      - "19201:19201"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2113'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9201,PLAINTEXT_INTERNAL://localhost:19201
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
    networks:
      prod_order_ps_network:
        ipv4_address: 173.21.1.2

  mysql:
    image: mysql:latest
    restart: always
    container_name: prod-order-ps-mysql
    volumes:
      #- mysql_event_booking_data:/var/lib/mysql
      - ./config/mysql:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: "prod@OrderPS_2025"
      MYSQL_USER: 'docker'
      MYSQL_PASSWORD: "prod@OrderPS_2025"
      MYSQL_DATABASE: 'neptune_prod_store'
    command: >
      --max-connections=10000 --bind-address=0.0.0.0

    ports:
      - "8802:3306"
    healthcheck:
      test: [ 'CMD', 'mysqladmin', 'ping', '-h', '127.0.0.1' ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      prod_order_ps_network:
        ipv4_address: 173.21.1.3


networks:
  prod_order_ps_network:
    external: true
    driver: bridge
#    name: prod_order_ps_network
#    ipam:
#      config:
#        - subnet: 173.21.0.0/16  # Allows 173.21.0.0 to 173.21.255.255
#          ip_range: 173.21.1.0/24  # Allows 173.21.1.1 to 173.21.1.254
